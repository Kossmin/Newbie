// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductService.Models;

#nullable disable

namespace ProductService.Migrations
{
    [DbContext(typeof(ProductContext))]
    partial class ProductContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ProductService.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CatName")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CatName = "Electronics",
                            Description = "Gadgets and devices"
                        },
                        new
                        {
                            Id = 2,
                            CatName = "Clothing",
                            Description = "Apparel and accessories"
                        },
                        new
                        {
                            Id = 3,
                            CatName = "Books",
                            Description = "Fiction and non-fiction"
                        });
                });

            modelBuilder.Entity("ProductService.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("ProductName")
                        .HasColumnType("longtext");

                    b.Property<string>("ShortDesc")
                        .HasColumnType("longtext");

                    b.Property<string>("ThumbnailImageUrl")
                        .HasColumnType("longtext");

                    b.Property<int?>("UnitsInStock")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Active = false,
                            CategoryId = 1,
                            DateCreated = new DateTime(2025, 3, 8, 10, 4, 21, 242, DateTimeKind.Utc).AddTicks(1878),
                            Price = 0m,
                            ProductName = "Laptop",
                            ThumbnailImageUrl = "https://cdn2.cellphones.com.vn/insecure/rs:fill:358:358/q:90/plain/https://cellphones.com.vn/media/catalog/product/i/p/iphone-16-pro-max.png"
                        },
                        new
                        {
                            ProductId = 2,
                            Active = false,
                            CategoryId = 2,
                            DateCreated = new DateTime(2025, 3, 8, 10, 4, 21, 242, DateTimeKind.Utc).AddTicks(1886),
                            Price = 0m,
                            ProductName = "T-Shirt",
                            ThumbnailImageUrl = "https://cdn2.cellphones.com.vn/insecure/rs:fill:358:358/q:90/plain/https://cellphones.com.vn/media/catalog/product/i/p/iphone-16-pro-max.png"
                        },
                        new
                        {
                            ProductId = 3,
                            Active = false,
                            CategoryId = 3,
                            DateCreated = new DateTime(2025, 3, 8, 10, 4, 21, 242, DateTimeKind.Utc).AddTicks(1887),
                            Price = 0m,
                            ProductName = "Novel",
                            ThumbnailImageUrl = "https://cdn2.cellphones.com.vn/insecure/rs:fill:358:358/q:90/plain/https://cellphones.com.vn/media/catalog/product/i/p/iphone-16-pro-max.png"
                        });
                });

            modelBuilder.Entity("ProductService.Models.Product", b =>
                {
                    b.HasOne("ProductService.Models.Category", "Cat")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId");

                    b.Navigation("Cat");
                });

            modelBuilder.Entity("ProductService.Models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
