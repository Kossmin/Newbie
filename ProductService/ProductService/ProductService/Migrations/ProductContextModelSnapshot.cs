// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductService.Models;

#nullable disable

namespace ProductService.Migrations
{
    [DbContext(typeof(ProductContext))]
    partial class ProductContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ProductService.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CatName")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("ProductService.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Desciption")
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("ProductName")
                        .HasColumnType("longtext");

                    b.Property<string>("ShortDesc")
                        .HasColumnType("longtext");

                    b.Property<string>("ThumbnailImageUrl")
                        .HasColumnType("longtext");

                    b.Property<int?>("UnitsInStock")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Active = false,
                            CategoryId = 4,
                            DateCreated = new DateTime(2024, 11, 20, 10, 41, 6, 237, DateTimeKind.Local).AddTicks(5314),
                            DateModified = new DateTime(2025, 2, 3, 2, 1, 51, 779, DateTimeKind.Local).AddTicks(1925),
                            Desciption = "Aspernatur non possimus. Praesentium corporis qui sapiente tempora quos. Voluptatibus quia perferendis quod et minima. Ut magnam numquam quaerat qui vel molestiae animi.",
                            Price = 285.779259089412610m,
                            ProductName = "Practical Frozen Table",
                            ShortDesc = "Consequuntur et harum quisquam sapiente quas est non praesentium nobis.",
                            ThumbnailImageUrl = "https://picsum.photos/640/480/?image=600",
                            UnitsInStock = 20
                        },
                        new
                        {
                            ProductId = 2,
                            Active = false,
                            CategoryId = 4,
                            DateCreated = new DateTime(2024, 10, 18, 19, 10, 41, 687, DateTimeKind.Local).AddTicks(7375),
                            DateModified = new DateTime(2025, 2, 10, 22, 6, 3, 143, DateTimeKind.Local).AddTicks(6578),
                            Desciption = "Qui eum repellendus. Nihil aut dolore id cumque exercitationem voluptatem. Natus repudiandae quasi.",
                            Price = 58.5791261101066970m,
                            ProductName = "Fantastic Cotton Gloves",
                            ShortDesc = "Temporibus iure pariatur aliquid et nesciunt mollitia et excepturi reprehenderit.",
                            ThumbnailImageUrl = "https://picsum.photos/640/480/?image=686",
                            UnitsInStock = 50
                        },
                        new
                        {
                            ProductId = 3,
                            Active = false,
                            CategoryId = 4,
                            DateCreated = new DateTime(2023, 11, 30, 13, 29, 56, 787, DateTimeKind.Local).AddTicks(3964),
                            DateModified = new DateTime(2025, 2, 4, 5, 29, 19, 336, DateTimeKind.Local).AddTicks(1829),
                            Desciption = "Odio incidunt natus sed. Et magnam neque veritatis consectetur id aut nam. Cumque non vel omnis non architecto corporis consequatur optio.",
                            Price = 315.832957894479960m,
                            ProductName = "Handmade Granite Car",
                            ShortDesc = "Ut voluptatem repudiandae quis cumque magnam ad qui rerum dicta.",
                            ThumbnailImageUrl = "https://picsum.photos/640/480/?image=360",
                            UnitsInStock = 78
                        },
                        new
                        {
                            ProductId = 4,
                            Active = true,
                            CategoryId = 3,
                            DateCreated = new DateTime(2025, 1, 12, 12, 11, 14, 355, DateTimeKind.Local).AddTicks(2405),
                            DateModified = new DateTime(2025, 2, 9, 6, 50, 4, 201, DateTimeKind.Local).AddTicks(7436),
                            Desciption = "Veritatis cumque non iure eveniet deleniti doloribus dolorem. Accusantium eaque aut. Distinctio sed perferendis eaque similique eos quod quia est. Magnam et vitae qui quo voluptas totam sed sequi. Qui ab fugit aliquam modi.",
                            Price = 468.564884167453910m,
                            ProductName = "Small Plastic Salad",
                            ShortDesc = "Corrupti pariatur est ea sit consequatur sequi sit voluptatem quia.",
                            ThumbnailImageUrl = "https://picsum.photos/640/480/?image=929",
                            UnitsInStock = 66
                        },
                        new
                        {
                            ProductId = 5,
                            Active = true,
                            CategoryId = 3,
                            DateCreated = new DateTime(2024, 12, 8, 6, 1, 28, 809, DateTimeKind.Local).AddTicks(6220),
                            DateModified = new DateTime(2025, 2, 9, 3, 47, 59, 645, DateTimeKind.Local).AddTicks(2660),
                            Desciption = "Et ut quisquam culpa aut quia repellendus ullam. Ratione voluptatem eos. Ut cumque rerum ipsa consequuntur illo distinctio.",
                            Price = 294.489773160214440m,
                            ProductName = "Fantastic Frozen Computer",
                            ShortDesc = "Vel iusto labore totam unde porro sunt est quia earum.",
                            ThumbnailImageUrl = "https://picsum.photos/640/480/?image=859",
                            UnitsInStock = 16
                        },
                        new
                        {
                            ProductId = 6,
                            Active = true,
                            CategoryId = 5,
                            DateCreated = new DateTime(2024, 5, 4, 13, 52, 39, 233, DateTimeKind.Local).AddTicks(4811),
                            DateModified = new DateTime(2025, 2, 3, 22, 30, 34, 979, DateTimeKind.Local).AddTicks(3158),
                            Desciption = "Ea nihil facere suscipit. Ut recusandae nesciunt sed est eveniet magni nulla necessitatibus ea. Porro magnam quasi. Fugit ex et omnis. Cum laudantium illum quia illum impedit. Consequatur quo enim occaecati ut.",
                            Price = 341.957824901856020m,
                            ProductName = "Intelligent Soft Hat",
                            ShortDesc = "Voluptate cumque incidunt qui nulla exercitationem ut doloremque recusandae expedita.",
                            ThumbnailImageUrl = "https://picsum.photos/640/480/?image=165",
                            UnitsInStock = 81
                        },
                        new
                        {
                            ProductId = 7,
                            Active = false,
                            CategoryId = 4,
                            DateCreated = new DateTime(2025, 1, 8, 23, 7, 16, 761, DateTimeKind.Local).AddTicks(1891),
                            DateModified = new DateTime(2025, 2, 6, 9, 26, 53, 264, DateTimeKind.Local).AddTicks(6213),
                            Desciption = "Et voluptatem recusandae iure iure nesciunt veritatis incidunt optio. Iusto minima blanditiis consequatur deleniti sint. Magni qui rem omnis. Doloribus molestias aut quia consequuntur aut. Ipsam culpa sint iusto.",
                            Price = 488.83263160185320m,
                            ProductName = "Small Wooden Hat",
                            ShortDesc = "Optio sit laborum optio est quasi libero dignissimos eos dignissimos.",
                            ThumbnailImageUrl = "https://picsum.photos/640/480/?image=598",
                            UnitsInStock = 67
                        },
                        new
                        {
                            ProductId = 8,
                            Active = false,
                            CategoryId = 1,
                            DateCreated = new DateTime(2023, 3, 9, 2, 32, 59, 828, DateTimeKind.Local).AddTicks(5160),
                            DateModified = new DateTime(2025, 2, 5, 11, 41, 8, 443, DateTimeKind.Local).AddTicks(3419),
                            Desciption = "Maxime consequatur ipsa reprehenderit. Quasi harum dolores. Sit quisquam quia voluptatem. Tempora officia rerum. Inventore est aut nihil soluta qui sed at.",
                            Price = 108.166990287796430m,
                            ProductName = "Gorgeous Metal Tuna",
                            ShortDesc = "Qui recusandae voluptas sit eos aliquam sapiente illo voluptatem voluptatem.",
                            ThumbnailImageUrl = "https://picsum.photos/640/480/?image=220",
                            UnitsInStock = 92
                        },
                        new
                        {
                            ProductId = 9,
                            Active = true,
                            CategoryId = 1,
                            DateCreated = new DateTime(2023, 8, 21, 12, 6, 22, 365, DateTimeKind.Local).AddTicks(4327),
                            DateModified = new DateTime(2025, 2, 5, 4, 41, 19, 304, DateTimeKind.Local).AddTicks(9771),
                            Desciption = "Quam corrupti qui dolor. A ut ea nostrum adipisci ad quam non illum. Vel dolores ducimus odit sed qui ut voluptate impedit quia. Omnis corporis dolor doloribus sint. Ipsam quia vero eveniet non quaerat autem. Nobis similique et et commodi.",
                            Price = 124.121494573501240m,
                            ProductName = "Generic Rubber Computer",
                            ShortDesc = "Eos nisi sequi similique quo blanditiis voluptas voluptatem sit id.",
                            ThumbnailImageUrl = "https://picsum.photos/640/480/?image=686",
                            UnitsInStock = 76
                        },
                        new
                        {
                            ProductId = 10,
                            Active = false,
                            CategoryId = 2,
                            DateCreated = new DateTime(2024, 3, 4, 9, 51, 45, 730, DateTimeKind.Local).AddTicks(1310),
                            DateModified = new DateTime(2025, 2, 11, 7, 31, 31, 886, DateTimeKind.Local).AddTicks(3581),
                            Desciption = "Ullam qui quos quia quibusdam itaque ex vitae quo. Aut qui quam nostrum delectus et rerum. Nemo sed aspernatur.",
                            Price = 401.134603778745540m,
                            ProductName = "Handmade Metal Car",
                            ShortDesc = "Consectetur provident facere sunt iure labore aliquam veritatis voluptas tenetur.",
                            ThumbnailImageUrl = "https://picsum.photos/640/480/?image=271",
                            UnitsInStock = 87
                        });
                });

            modelBuilder.Entity("ProductService.Models.Product", b =>
                {
                    b.HasOne("ProductService.Models.Category", "Cat")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId");

                    b.Navigation("Cat");
                });

            modelBuilder.Entity("ProductService.Models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
